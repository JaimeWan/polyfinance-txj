<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ptteng.dao.CreditorMatchingMapper">
  <resultMap id="BaseResultMap" type="com.ptteng.model.CreditorMatching">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="loan_period" jdbcType="BIGINT" property="loanPeriod" />
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="product_term" jdbcType="BIGINT" property="productTerm" />
    <result column="wait_match_amount" jdbcType="DECIMAL" property="waitMatchAmount" />
    <result column="interest_at" jdbcType="BIGINT" property="interestAt" />
    <result column="end_at" jdbcType="BIGINT" property="endAt" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, loan_period, contract_id, product_term, wait_match_amount, interest_at, end_at, 
    state, create_at, update_at, create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from creditor_matching
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from creditor_matching
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ptteng.model.CreditorMatching">
    insert into creditor_matching (id, loan_period, contract_id, 
      product_term, wait_match_amount, interest_at, 
      end_at, state, create_at, 
      update_at, create_by, update_by
      )
    values (#{id,jdbcType=BIGINT}, #{loanPeriod,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, 
      #{productTerm,jdbcType=BIGINT}, #{waitMatchAmount,jdbcType=DECIMAL}, #{interestAt,jdbcType=BIGINT}, 
      #{endAt,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT}, 
      #{updateAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ptteng.model.CreditorMatching">
    insert into creditor_matching
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loanPeriod != null">
        loan_period,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="productTerm != null">
        product_term,
      </if>
      <if test="waitMatchAmount != null">
        wait_match_amount,
      </if>
      <if test="interestAt != null">
        interest_at,
      </if>
      <if test="endAt != null">
        end_at,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loanPeriod != null">
        #{loanPeriod,jdbcType=BIGINT},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="productTerm != null">
        #{productTerm,jdbcType=BIGINT},
      </if>
      <if test="waitMatchAmount != null">
        #{waitMatchAmount,jdbcType=DECIMAL},
      </if>
      <if test="interestAt != null">
        #{interestAt,jdbcType=BIGINT},
      </if>
      <if test="endAt != null">
        #{endAt,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptteng.model.CreditorMatching">
    update creditor_matching
    <set>
      <if test="loanPeriod != null">
        loan_period = #{loanPeriod,jdbcType=BIGINT},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="productTerm != null">
        product_term = #{productTerm,jdbcType=BIGINT},
      </if>
      <if test="waitMatchAmount != null">
        wait_match_amount = #{waitMatchAmount,jdbcType=DECIMAL},
      </if>
      <if test="interestAt != null">
        interest_at = #{interestAt,jdbcType=BIGINT},
      </if>
      <if test="endAt != null">
        end_at = #{endAt,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptteng.model.CreditorMatching">
    update creditor_matching
    set loan_period = #{loanPeriod,jdbcType=BIGINT},
      contract_id = #{contractId,jdbcType=BIGINT},
      product_term = #{productTerm,jdbcType=BIGINT},
      wait_match_amount = #{waitMatchAmount,jdbcType=DECIMAL},
      interest_at = #{interestAt,jdbcType=BIGINT},
      end_at = #{endAt,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>