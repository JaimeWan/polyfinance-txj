<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ptteng.dao.FeedBackMapper">
  <resultMap id="BaseResultMap" type="com.ptteng.model.FeedBack">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="opinion_content" jdbcType="VARCHAR" property="opinionContent" />
    <result column="submit_by" jdbcType="VARCHAR" property="submitBy" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="opinion_state" jdbcType="INTEGER" property="opinionState" />
    <result column="feedback_content" jdbcType="VARCHAR" property="feedbackContent" />
    <result column="whether_read" jdbcType="INTEGER" property="whetherRead" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, opinion_content, submit_by, user_id, opinion_state, feedback_content, whether_read, 
    create_at, update_at, create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from feed_back
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from feed_back
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ptteng.model.FeedBack">
    insert into feed_back (id, opinion_content, submit_by, 
      user_id, opinion_state, feedback_content, 
      whether_read, create_at, update_at, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{opinionContent,jdbcType=VARCHAR}, #{submitBy,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{opinionState,jdbcType=INTEGER}, #{feedbackContent,jdbcType=VARCHAR}, 
      #{whetherRead,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ptteng.model.FeedBack">
    insert into feed_back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="opinionContent != null">
        opinion_content,
      </if>
      <if test="submitBy != null">
        submit_by,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="opinionState != null">
        opinion_state,
      </if>
      <if test="feedbackContent != null">
        feedback_content,
      </if>
      <if test="whetherRead != null">
        whether_read,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="opinionContent != null">
        #{opinionContent,jdbcType=VARCHAR},
      </if>
      <if test="submitBy != null">
        #{submitBy,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="opinionState != null">
        #{opinionState,jdbcType=INTEGER},
      </if>
      <if test="feedbackContent != null">
        #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="whetherRead != null">
        #{whetherRead,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptteng.model.FeedBack">
    update feed_back
    <set>
      <if test="opinionContent != null">
        opinion_content = #{opinionContent,jdbcType=VARCHAR},
      </if>
      <if test="submitBy != null">
        submit_by = #{submitBy,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="opinionState != null">
        opinion_state = #{opinionState,jdbcType=INTEGER},
      </if>
      <if test="feedbackContent != null">
        feedback_content = #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="whetherRead != null">
        whether_read = #{whetherRead,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptteng.model.FeedBack">
    update feed_back
    set opinion_content = #{opinionContent,jdbcType=VARCHAR},
      submit_by = #{submitBy,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      opinion_state = #{opinionState,jdbcType=INTEGER},
      feedback_content = #{feedbackContent,jdbcType=VARCHAR},
      whether_read = #{whetherRead,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>